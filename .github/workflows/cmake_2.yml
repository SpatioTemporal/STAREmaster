name: CMake macOS-ubuntu

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest,  macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Installs
      run: |
        set -x
        if [[ ${{ matrix.os }} == "ubuntu-latest" ]]; then	
           sudo apt-get install -o Acquire::Retries=3 netcdf-bin libnetcdf-dev doxygen graphviz wget gfortran libjpeg-dev libz-dev
        elif [[ ${{ matrix.os }} == "macos-latest" ]]; then
           brew install netcdf doxygen 
        fi
    - name: cache-hdf4
      id: cache-hdf4
      uses: actions/cache@v2
      with:
        path: ~/hdf4
        key: hdf4-${{ runner.os }}-fPIC-4.2.13-111520_3

    - name: build-hdf4
      if: steps.cache-hdf4.outputs.cache-hit != 'true'
      run: |
        set -x
        export PWD_DIR=`pwd`
        echo ${PWD_DIR}
        wget https://support.hdfgroup.org/ftp/HDF/HDF_Current/src/hdf-4.2.13.tar.gz &> /dev/null
        tar zxf hdf-4.2.13.tar.gz
        cd hdf-4.2.13
        export CPPFLAGS="-I/usr/include -I/usr/local/include"
        export CFLAGS="-fPIC -Wno-implicit-function-declaration"
        echo ${CPPFLAGS}
        echo ${LDFLAGS}
        ./configure --disable-netcdf --disable-fortran --prefix=${PWD_DIR}/hdf4 
        make all 
        sudo make install clean
        cd ..
    - name: cache-hdfeos2
      id: cache-hdfeos2
      uses: actions/cache@v2
      with:
        path: ~/hdfeos2
        key: hdfeos2-${{ runner.os }}-fPIC-20v1.00-111520_2

    - name: build-hdfeos2
      if: steps.cache-hdfeos2.outputs.cache-hit != 'true'
      run: |
        set -x
        export PWD_DIR=`pwd`
        wget https://observer.gsfc.nasa.gov/ftp/edhs/hdfeos/latest_release/HDF-EOS2.20v1.00.tar.Z  &> /dev/null
        tar zxf HDF-EOS2.20v1.00.tar.Z
        cd hdfeos
        export CPPFLAGS="-I/usr/include -I/usr/local/include -I${PWD_DIR}/hdf4/include"
        export LDFLAGS="-L${PWD_DIR}/hdf4/lib"
        export CFLAGS=-fPIC
        ./configure  --enable-install-include --prefix=${PWD_DIR}/hdfeos2
        make
        sudo make install clean
        cd ..
    - name: cache-stare
      id: cache-stare
      uses: actions/cache@v2
      with:
        path: ~/stare
        key: stare-${{ runner.os }}-0.16.3

    - name: build-stare
      if: steps.cache-stare.outputs.cache-hit != 'true'
      run: |
        set -x
        wget https://github.com/SpatioTemporal/STARE/archive/0.16.3-beta.tar.gz  &> /dev/null
        tar zxf 0.16.3-beta.tar.gz
        cd STARE-0.16.3-beta/
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=~/stare ..
        make all
        sudo make install
        cd ../..

        
    - name: autoreconf
      run: autoreconf -i
    - name: configure
      run: |
        set -x
        mkdir build
        cd build
        export PWD_DIR=`pwd`
        export LIBS=`nc-config --libs`
        cmake -DCMAKE_BUILD_TYPE=Debug --trace-source=test/CMakeLists.txt  -DCMAKE_PREFIX_PATH="${PWD_DIR}/hdf4;${PWD_DIR}/hdfeos2" -DSTARE_INCLUDE_DIR=~/stare/include -DSTARE_LIBRARY=~/stare/lib ..
        make VERBOSE=1
        make VERBOSE=1 test


